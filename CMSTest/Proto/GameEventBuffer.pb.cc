// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: GameEventBuffer.proto

#include "GameEventBuffer.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace protobuf_EntityGameEventBuffer_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_EntityGameEventBuffer_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_EntityGameEventBuffer;
}  // namespace protobuf_EntityGameEventBuffer_2eproto
namespace protobuf_GameEventBuffer_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_GameEventBuffer_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_JoinSecurityGameEventBuffer;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_GameEventBuffer_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_LeaveSecurityGameEventBuffer;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_GameEventBuffer_2eproto ::google::protobuf::internal::SCCInfo<2> scc_info_SecurityGameEventBuffer;
}  // namespace protobuf_GameEventBuffer_2eproto
namespace usx {
namespace geofactions {
class JoinSecurityGameEventBufferDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<JoinSecurityGameEventBuffer>
      _instance;
} _JoinSecurityGameEventBuffer_default_instance_;
class LeaveSecurityGameEventBufferDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<LeaveSecurityGameEventBuffer>
      _instance;
} _LeaveSecurityGameEventBuffer_default_instance_;
class SecurityGameEventBufferDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SecurityGameEventBuffer>
      _instance;
} _SecurityGameEventBuffer_default_instance_;
class GameEventBufferDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<GameEventBuffer>
      _instance;
} _GameEventBuffer_default_instance_;
}  // namespace geofactions
}  // namespace usx
namespace protobuf_GameEventBuffer_2eproto {
static void InitDefaultsJoinSecurityGameEventBuffer() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::usx::geofactions::_JoinSecurityGameEventBuffer_default_instance_;
    new (ptr) ::usx::geofactions::JoinSecurityGameEventBuffer();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::usx::geofactions::JoinSecurityGameEventBuffer::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_JoinSecurityGameEventBuffer =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsJoinSecurityGameEventBuffer}, {}};

static void InitDefaultsLeaveSecurityGameEventBuffer() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::usx::geofactions::_LeaveSecurityGameEventBuffer_default_instance_;
    new (ptr) ::usx::geofactions::LeaveSecurityGameEventBuffer();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::usx::geofactions::LeaveSecurityGameEventBuffer::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_LeaveSecurityGameEventBuffer =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsLeaveSecurityGameEventBuffer}, {}};

static void InitDefaultsSecurityGameEventBuffer() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::usx::geofactions::_SecurityGameEventBuffer_default_instance_;
    new (ptr) ::usx::geofactions::SecurityGameEventBuffer();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::usx::geofactions::SecurityGameEventBuffer::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_SecurityGameEventBuffer =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsSecurityGameEventBuffer}, {
      &protobuf_GameEventBuffer_2eproto::scc_info_JoinSecurityGameEventBuffer.base,
      &protobuf_GameEventBuffer_2eproto::scc_info_LeaveSecurityGameEventBuffer.base,}};

static void InitDefaultsGameEventBuffer() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::usx::geofactions::_GameEventBuffer_default_instance_;
    new (ptr) ::usx::geofactions::GameEventBuffer();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::usx::geofactions::GameEventBuffer::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_GameEventBuffer =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsGameEventBuffer}, {
      &protobuf_EntityGameEventBuffer_2eproto::scc_info_EntityGameEventBuffer.base,
      &protobuf_GameEventBuffer_2eproto::scc_info_SecurityGameEventBuffer.base,}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_JoinSecurityGameEventBuffer.base);
  ::google::protobuf::internal::InitSCC(&scc_info_LeaveSecurityGameEventBuffer.base);
  ::google::protobuf::internal::InitSCC(&scc_info_SecurityGameEventBuffer.base);
  ::google::protobuf::internal::InitSCC(&scc_info_GameEventBuffer.base);
}

::google::protobuf::Metadata file_level_metadata[4];
const ::google::protobuf::EnumDescriptor* file_level_enum_descriptors[2];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::usx::geofactions::JoinSecurityGameEventBuffer, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::usx::geofactions::JoinSecurityGameEventBuffer, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::usx::geofactions::JoinSecurityGameEventBuffer, uuid_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::usx::geofactions::LeaveSecurityGameEventBuffer, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::usx::geofactions::LeaveSecurityGameEventBuffer, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::usx::geofactions::LeaveSecurityGameEventBuffer, uuid_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::usx::geofactions::SecurityGameEventBuffer, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::usx::geofactions::SecurityGameEventBuffer, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::usx::geofactions::SecurityGameEventBuffer, type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::usx::geofactions::SecurityGameEventBuffer, joinsecuritygameeventbuffer_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::usx::geofactions::SecurityGameEventBuffer, leavesecuritygameeventbuffer_),
  2,
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::usx::geofactions::GameEventBuffer, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::usx::geofactions::GameEventBuffer, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::usx::geofactions::GameEventBuffer, type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::usx::geofactions::GameEventBuffer, entitygameeventbuffer_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::usx::geofactions::GameEventBuffer, securitygameeventbuffer_),
  2,
  0,
  1,
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, 6, sizeof(::usx::geofactions::JoinSecurityGameEventBuffer)},
  { 7, 13, sizeof(::usx::geofactions::LeaveSecurityGameEventBuffer)},
  { 14, 22, sizeof(::usx::geofactions::SecurityGameEventBuffer)},
  { 25, 33, sizeof(::usx::geofactions::GameEventBuffer)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::usx::geofactions::_JoinSecurityGameEventBuffer_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::usx::geofactions::_LeaveSecurityGameEventBuffer_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::usx::geofactions::_SecurityGameEventBuffer_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::usx::geofactions::_GameEventBuffer_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "GameEventBuffer.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, file_level_enum_descriptors, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 4);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\025GameEventBuffer.proto\022\017usx.geofactions"
      "\032\033EntityGameEventBuffer.proto\"+\n\033JoinSec"
      "urityGameEventBuffer\022\014\n\004UUID\030\001 \002(\t\",\n\034Le"
      "aveSecurityGameEventBuffer\022\014\n\004UUID\030\001 \002(\t"
      "\"\337\002\n\027SecurityGameEventBuffer\022[\n\004type\030\001 \002"
      "(\0162D.usx.geofactions.SecurityGameEventBu"
      "ffer.SecurityGameEventBufferType:\007UNKNOW"
      "N\022Q\n\033joinSecurityGameEventBuffer\030\003 \001(\0132,"
      ".usx.geofactions.JoinSecurityGameEventBu"
      "ffer\022S\n\034leaveSecurityGameEventBuffer\030\004 \001"
      "(\0132-.usx.geofactions.LeaveSecurityGameEv"
      "entBuffer\"\?\n\033SecurityGameEventBufferType"
      "\022\013\n\007UNKNOWN\020\000\022\010\n\004JOIN\020\001\022\t\n\005LEAVE\020\002\"\256\002\n\017G"
      "ameEventBuffer\022K\n\004type\030\001 \002(\01624.usx.geofa"
      "ctions.GameEventBuffer.GameEventBufferTy"
      "pe:\007UNKNOWN\022E\n\025entityGameEventBuffer\030\002 \001"
      "(\0132&.usx.geofactions.EntityGameEventBuff"
      "er\022I\n\027securityGameEventBuffer\030\003 \001(\0132(.us"
      "x.geofactions.SecurityGameEventBuffer\"<\n"
      "\023GameEventBufferType\022\013\n\007UNKNOWN\020\000\022\n\n\006ENT"
      "ITY\020\001\022\014\n\010SECURITY\020\002"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 819);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "GameEventBuffer.proto", &protobuf_RegisterTypes);
  ::protobuf_EntityGameEventBuffer_2eproto::AddDescriptors();
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_GameEventBuffer_2eproto
namespace usx {
namespace geofactions {
const ::google::protobuf::EnumDescriptor* SecurityGameEventBuffer_SecurityGameEventBufferType_descriptor() {
  protobuf_GameEventBuffer_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_GameEventBuffer_2eproto::file_level_enum_descriptors[0];
}
bool SecurityGameEventBuffer_SecurityGameEventBufferType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const SecurityGameEventBuffer_SecurityGameEventBufferType SecurityGameEventBuffer::UNKNOWN;
const SecurityGameEventBuffer_SecurityGameEventBufferType SecurityGameEventBuffer::JOIN;
const SecurityGameEventBuffer_SecurityGameEventBufferType SecurityGameEventBuffer::LEAVE;
const SecurityGameEventBuffer_SecurityGameEventBufferType SecurityGameEventBuffer::SecurityGameEventBufferType_MIN;
const SecurityGameEventBuffer_SecurityGameEventBufferType SecurityGameEventBuffer::SecurityGameEventBufferType_MAX;
const int SecurityGameEventBuffer::SecurityGameEventBufferType_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* GameEventBuffer_GameEventBufferType_descriptor() {
  protobuf_GameEventBuffer_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_GameEventBuffer_2eproto::file_level_enum_descriptors[1];
}
bool GameEventBuffer_GameEventBufferType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const GameEventBuffer_GameEventBufferType GameEventBuffer::UNKNOWN;
const GameEventBuffer_GameEventBufferType GameEventBuffer::ENTITY;
const GameEventBuffer_GameEventBufferType GameEventBuffer::SECURITY;
const GameEventBuffer_GameEventBufferType GameEventBuffer::GameEventBufferType_MIN;
const GameEventBuffer_GameEventBufferType GameEventBuffer::GameEventBufferType_MAX;
const int GameEventBuffer::GameEventBufferType_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

// ===================================================================

void JoinSecurityGameEventBuffer::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int JoinSecurityGameEventBuffer::kUUIDFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

JoinSecurityGameEventBuffer::JoinSecurityGameEventBuffer()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_GameEventBuffer_2eproto::scc_info_JoinSecurityGameEventBuffer.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:usx.geofactions.JoinSecurityGameEventBuffer)
}
JoinSecurityGameEventBuffer::JoinSecurityGameEventBuffer(const JoinSecurityGameEventBuffer& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  uuid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_uuid()) {
    uuid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.uuid_);
  }
  // @@protoc_insertion_point(copy_constructor:usx.geofactions.JoinSecurityGameEventBuffer)
}

void JoinSecurityGameEventBuffer::SharedCtor() {
  uuid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

JoinSecurityGameEventBuffer::~JoinSecurityGameEventBuffer() {
  // @@protoc_insertion_point(destructor:usx.geofactions.JoinSecurityGameEventBuffer)
  SharedDtor();
}

void JoinSecurityGameEventBuffer::SharedDtor() {
  uuid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void JoinSecurityGameEventBuffer::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* JoinSecurityGameEventBuffer::descriptor() {
  ::protobuf_GameEventBuffer_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_GameEventBuffer_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const JoinSecurityGameEventBuffer& JoinSecurityGameEventBuffer::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_GameEventBuffer_2eproto::scc_info_JoinSecurityGameEventBuffer.base);
  return *internal_default_instance();
}


void JoinSecurityGameEventBuffer::Clear() {
// @@protoc_insertion_point(message_clear_start:usx.geofactions.JoinSecurityGameEventBuffer)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    uuid_.ClearNonDefaultToEmptyNoArena();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool JoinSecurityGameEventBuffer::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:usx.geofactions.JoinSecurityGameEventBuffer)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string UUID = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_uuid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->uuid().data(), static_cast<int>(this->uuid().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "usx.geofactions.JoinSecurityGameEventBuffer.UUID");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:usx.geofactions.JoinSecurityGameEventBuffer)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:usx.geofactions.JoinSecurityGameEventBuffer)
  return false;
#undef DO_
}

void JoinSecurityGameEventBuffer::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:usx.geofactions.JoinSecurityGameEventBuffer)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string UUID = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->uuid().data(), static_cast<int>(this->uuid().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "usx.geofactions.JoinSecurityGameEventBuffer.UUID");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->uuid(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:usx.geofactions.JoinSecurityGameEventBuffer)
}

::google::protobuf::uint8* JoinSecurityGameEventBuffer::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:usx.geofactions.JoinSecurityGameEventBuffer)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string UUID = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->uuid().data(), static_cast<int>(this->uuid().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "usx.geofactions.JoinSecurityGameEventBuffer.UUID");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->uuid(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:usx.geofactions.JoinSecurityGameEventBuffer)
  return target;
}

size_t JoinSecurityGameEventBuffer::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:usx.geofactions.JoinSecurityGameEventBuffer)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required string UUID = 1;
  if (has_uuid()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->uuid());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void JoinSecurityGameEventBuffer::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:usx.geofactions.JoinSecurityGameEventBuffer)
  GOOGLE_DCHECK_NE(&from, this);
  const JoinSecurityGameEventBuffer* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const JoinSecurityGameEventBuffer>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:usx.geofactions.JoinSecurityGameEventBuffer)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:usx.geofactions.JoinSecurityGameEventBuffer)
    MergeFrom(*source);
  }
}

void JoinSecurityGameEventBuffer::MergeFrom(const JoinSecurityGameEventBuffer& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:usx.geofactions.JoinSecurityGameEventBuffer)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_uuid()) {
    set_has_uuid();
    uuid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.uuid_);
  }
}

void JoinSecurityGameEventBuffer::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:usx.geofactions.JoinSecurityGameEventBuffer)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void JoinSecurityGameEventBuffer::CopyFrom(const JoinSecurityGameEventBuffer& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:usx.geofactions.JoinSecurityGameEventBuffer)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool JoinSecurityGameEventBuffer::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  return true;
}

void JoinSecurityGameEventBuffer::Swap(JoinSecurityGameEventBuffer* other) {
  if (other == this) return;
  InternalSwap(other);
}
void JoinSecurityGameEventBuffer::InternalSwap(JoinSecurityGameEventBuffer* other) {
  using std::swap;
  uuid_.Swap(&other->uuid_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata JoinSecurityGameEventBuffer::GetMetadata() const {
  protobuf_GameEventBuffer_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_GameEventBuffer_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void LeaveSecurityGameEventBuffer::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int LeaveSecurityGameEventBuffer::kUUIDFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

LeaveSecurityGameEventBuffer::LeaveSecurityGameEventBuffer()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_GameEventBuffer_2eproto::scc_info_LeaveSecurityGameEventBuffer.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:usx.geofactions.LeaveSecurityGameEventBuffer)
}
LeaveSecurityGameEventBuffer::LeaveSecurityGameEventBuffer(const LeaveSecurityGameEventBuffer& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  uuid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_uuid()) {
    uuid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.uuid_);
  }
  // @@protoc_insertion_point(copy_constructor:usx.geofactions.LeaveSecurityGameEventBuffer)
}

void LeaveSecurityGameEventBuffer::SharedCtor() {
  uuid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

LeaveSecurityGameEventBuffer::~LeaveSecurityGameEventBuffer() {
  // @@protoc_insertion_point(destructor:usx.geofactions.LeaveSecurityGameEventBuffer)
  SharedDtor();
}

void LeaveSecurityGameEventBuffer::SharedDtor() {
  uuid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void LeaveSecurityGameEventBuffer::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* LeaveSecurityGameEventBuffer::descriptor() {
  ::protobuf_GameEventBuffer_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_GameEventBuffer_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const LeaveSecurityGameEventBuffer& LeaveSecurityGameEventBuffer::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_GameEventBuffer_2eproto::scc_info_LeaveSecurityGameEventBuffer.base);
  return *internal_default_instance();
}


void LeaveSecurityGameEventBuffer::Clear() {
// @@protoc_insertion_point(message_clear_start:usx.geofactions.LeaveSecurityGameEventBuffer)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    uuid_.ClearNonDefaultToEmptyNoArena();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool LeaveSecurityGameEventBuffer::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:usx.geofactions.LeaveSecurityGameEventBuffer)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string UUID = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_uuid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->uuid().data(), static_cast<int>(this->uuid().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "usx.geofactions.LeaveSecurityGameEventBuffer.UUID");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:usx.geofactions.LeaveSecurityGameEventBuffer)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:usx.geofactions.LeaveSecurityGameEventBuffer)
  return false;
#undef DO_
}

void LeaveSecurityGameEventBuffer::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:usx.geofactions.LeaveSecurityGameEventBuffer)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string UUID = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->uuid().data(), static_cast<int>(this->uuid().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "usx.geofactions.LeaveSecurityGameEventBuffer.UUID");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->uuid(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:usx.geofactions.LeaveSecurityGameEventBuffer)
}

::google::protobuf::uint8* LeaveSecurityGameEventBuffer::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:usx.geofactions.LeaveSecurityGameEventBuffer)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string UUID = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->uuid().data(), static_cast<int>(this->uuid().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "usx.geofactions.LeaveSecurityGameEventBuffer.UUID");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->uuid(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:usx.geofactions.LeaveSecurityGameEventBuffer)
  return target;
}

size_t LeaveSecurityGameEventBuffer::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:usx.geofactions.LeaveSecurityGameEventBuffer)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required string UUID = 1;
  if (has_uuid()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->uuid());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void LeaveSecurityGameEventBuffer::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:usx.geofactions.LeaveSecurityGameEventBuffer)
  GOOGLE_DCHECK_NE(&from, this);
  const LeaveSecurityGameEventBuffer* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const LeaveSecurityGameEventBuffer>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:usx.geofactions.LeaveSecurityGameEventBuffer)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:usx.geofactions.LeaveSecurityGameEventBuffer)
    MergeFrom(*source);
  }
}

void LeaveSecurityGameEventBuffer::MergeFrom(const LeaveSecurityGameEventBuffer& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:usx.geofactions.LeaveSecurityGameEventBuffer)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_uuid()) {
    set_has_uuid();
    uuid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.uuid_);
  }
}

void LeaveSecurityGameEventBuffer::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:usx.geofactions.LeaveSecurityGameEventBuffer)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LeaveSecurityGameEventBuffer::CopyFrom(const LeaveSecurityGameEventBuffer& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:usx.geofactions.LeaveSecurityGameEventBuffer)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LeaveSecurityGameEventBuffer::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  return true;
}

void LeaveSecurityGameEventBuffer::Swap(LeaveSecurityGameEventBuffer* other) {
  if (other == this) return;
  InternalSwap(other);
}
void LeaveSecurityGameEventBuffer::InternalSwap(LeaveSecurityGameEventBuffer* other) {
  using std::swap;
  uuid_.Swap(&other->uuid_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata LeaveSecurityGameEventBuffer::GetMetadata() const {
  protobuf_GameEventBuffer_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_GameEventBuffer_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void SecurityGameEventBuffer::InitAsDefaultInstance() {
  ::usx::geofactions::_SecurityGameEventBuffer_default_instance_._instance.get_mutable()->joinsecuritygameeventbuffer_ = const_cast< ::usx::geofactions::JoinSecurityGameEventBuffer*>(
      ::usx::geofactions::JoinSecurityGameEventBuffer::internal_default_instance());
  ::usx::geofactions::_SecurityGameEventBuffer_default_instance_._instance.get_mutable()->leavesecuritygameeventbuffer_ = const_cast< ::usx::geofactions::LeaveSecurityGameEventBuffer*>(
      ::usx::geofactions::LeaveSecurityGameEventBuffer::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SecurityGameEventBuffer::kTypeFieldNumber;
const int SecurityGameEventBuffer::kJoinSecurityGameEventBufferFieldNumber;
const int SecurityGameEventBuffer::kLeaveSecurityGameEventBufferFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SecurityGameEventBuffer::SecurityGameEventBuffer()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_GameEventBuffer_2eproto::scc_info_SecurityGameEventBuffer.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:usx.geofactions.SecurityGameEventBuffer)
}
SecurityGameEventBuffer::SecurityGameEventBuffer(const SecurityGameEventBuffer& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_joinsecuritygameeventbuffer()) {
    joinsecuritygameeventbuffer_ = new ::usx::geofactions::JoinSecurityGameEventBuffer(*from.joinsecuritygameeventbuffer_);
  } else {
    joinsecuritygameeventbuffer_ = NULL;
  }
  if (from.has_leavesecuritygameeventbuffer()) {
    leavesecuritygameeventbuffer_ = new ::usx::geofactions::LeaveSecurityGameEventBuffer(*from.leavesecuritygameeventbuffer_);
  } else {
    leavesecuritygameeventbuffer_ = NULL;
  }
  type_ = from.type_;
  // @@protoc_insertion_point(copy_constructor:usx.geofactions.SecurityGameEventBuffer)
}

void SecurityGameEventBuffer::SharedCtor() {
  ::memset(&joinsecuritygameeventbuffer_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&type_) -
      reinterpret_cast<char*>(&joinsecuritygameeventbuffer_)) + sizeof(type_));
}

SecurityGameEventBuffer::~SecurityGameEventBuffer() {
  // @@protoc_insertion_point(destructor:usx.geofactions.SecurityGameEventBuffer)
  SharedDtor();
}

void SecurityGameEventBuffer::SharedDtor() {
  if (this != internal_default_instance()) delete joinsecuritygameeventbuffer_;
  if (this != internal_default_instance()) delete leavesecuritygameeventbuffer_;
}

void SecurityGameEventBuffer::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* SecurityGameEventBuffer::descriptor() {
  ::protobuf_GameEventBuffer_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_GameEventBuffer_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SecurityGameEventBuffer& SecurityGameEventBuffer::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_GameEventBuffer_2eproto::scc_info_SecurityGameEventBuffer.base);
  return *internal_default_instance();
}


void SecurityGameEventBuffer::Clear() {
// @@protoc_insertion_point(message_clear_start:usx.geofactions.SecurityGameEventBuffer)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(joinsecuritygameeventbuffer_ != NULL);
      joinsecuritygameeventbuffer_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(leavesecuritygameeventbuffer_ != NULL);
      leavesecuritygameeventbuffer_->Clear();
    }
  }
  type_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool SecurityGameEventBuffer::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:usx.geofactions.SecurityGameEventBuffer)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .usx.geofactions.SecurityGameEventBuffer.SecurityGameEventBufferType type = 1 [default = UNKNOWN];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::usx::geofactions::SecurityGameEventBuffer_SecurityGameEventBufferType_IsValid(value)) {
            set_type(static_cast< ::usx::geofactions::SecurityGameEventBuffer_SecurityGameEventBufferType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(
                1, static_cast< ::google::protobuf::uint64>(value));
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .usx.geofactions.JoinSecurityGameEventBuffer joinSecurityGameEventBuffer = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_joinsecuritygameeventbuffer()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .usx.geofactions.LeaveSecurityGameEventBuffer leaveSecurityGameEventBuffer = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_leavesecuritygameeventbuffer()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:usx.geofactions.SecurityGameEventBuffer)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:usx.geofactions.SecurityGameEventBuffer)
  return false;
#undef DO_
}

void SecurityGameEventBuffer::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:usx.geofactions.SecurityGameEventBuffer)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .usx.geofactions.SecurityGameEventBuffer.SecurityGameEventBufferType type = 1 [default = UNKNOWN];
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->type(), output);
  }

  // optional .usx.geofactions.JoinSecurityGameEventBuffer joinSecurityGameEventBuffer = 3;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->_internal_joinsecuritygameeventbuffer(), output);
  }

  // optional .usx.geofactions.LeaveSecurityGameEventBuffer leaveSecurityGameEventBuffer = 4;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->_internal_leavesecuritygameeventbuffer(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:usx.geofactions.SecurityGameEventBuffer)
}

::google::protobuf::uint8* SecurityGameEventBuffer::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:usx.geofactions.SecurityGameEventBuffer)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .usx.geofactions.SecurityGameEventBuffer.SecurityGameEventBufferType type = 1 [default = UNKNOWN];
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->type(), target);
  }

  // optional .usx.geofactions.JoinSecurityGameEventBuffer joinSecurityGameEventBuffer = 3;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->_internal_joinsecuritygameeventbuffer(), deterministic, target);
  }

  // optional .usx.geofactions.LeaveSecurityGameEventBuffer leaveSecurityGameEventBuffer = 4;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, this->_internal_leavesecuritygameeventbuffer(), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:usx.geofactions.SecurityGameEventBuffer)
  return target;
}

size_t SecurityGameEventBuffer::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:usx.geofactions.SecurityGameEventBuffer)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required .usx.geofactions.SecurityGameEventBuffer.SecurityGameEventBufferType type = 1 [default = UNKNOWN];
  if (has_type()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->type());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional .usx.geofactions.JoinSecurityGameEventBuffer joinSecurityGameEventBuffer = 3;
    if (has_joinsecuritygameeventbuffer()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *joinsecuritygameeventbuffer_);
    }

    // optional .usx.geofactions.LeaveSecurityGameEventBuffer leaveSecurityGameEventBuffer = 4;
    if (has_leavesecuritygameeventbuffer()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *leavesecuritygameeventbuffer_);
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SecurityGameEventBuffer::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:usx.geofactions.SecurityGameEventBuffer)
  GOOGLE_DCHECK_NE(&from, this);
  const SecurityGameEventBuffer* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SecurityGameEventBuffer>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:usx.geofactions.SecurityGameEventBuffer)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:usx.geofactions.SecurityGameEventBuffer)
    MergeFrom(*source);
  }
}

void SecurityGameEventBuffer::MergeFrom(const SecurityGameEventBuffer& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:usx.geofactions.SecurityGameEventBuffer)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      mutable_joinsecuritygameeventbuffer()->::usx::geofactions::JoinSecurityGameEventBuffer::MergeFrom(from.joinsecuritygameeventbuffer());
    }
    if (cached_has_bits & 0x00000002u) {
      mutable_leavesecuritygameeventbuffer()->::usx::geofactions::LeaveSecurityGameEventBuffer::MergeFrom(from.leavesecuritygameeventbuffer());
    }
    if (cached_has_bits & 0x00000004u) {
      type_ = from.type_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void SecurityGameEventBuffer::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:usx.geofactions.SecurityGameEventBuffer)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SecurityGameEventBuffer::CopyFrom(const SecurityGameEventBuffer& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:usx.geofactions.SecurityGameEventBuffer)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SecurityGameEventBuffer::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000004) != 0x00000004) return false;
  if (has_joinsecuritygameeventbuffer()) {
    if (!this->joinsecuritygameeventbuffer_->IsInitialized()) return false;
  }
  if (has_leavesecuritygameeventbuffer()) {
    if (!this->leavesecuritygameeventbuffer_->IsInitialized()) return false;
  }
  return true;
}

void SecurityGameEventBuffer::Swap(SecurityGameEventBuffer* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SecurityGameEventBuffer::InternalSwap(SecurityGameEventBuffer* other) {
  using std::swap;
  swap(joinsecuritygameeventbuffer_, other->joinsecuritygameeventbuffer_);
  swap(leavesecuritygameeventbuffer_, other->leavesecuritygameeventbuffer_);
  swap(type_, other->type_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata SecurityGameEventBuffer::GetMetadata() const {
  protobuf_GameEventBuffer_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_GameEventBuffer_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void GameEventBuffer::InitAsDefaultInstance() {
  ::usx::geofactions::_GameEventBuffer_default_instance_._instance.get_mutable()->entitygameeventbuffer_ = const_cast< ::usx::geofactions::EntityGameEventBuffer*>(
      ::usx::geofactions::EntityGameEventBuffer::internal_default_instance());
  ::usx::geofactions::_GameEventBuffer_default_instance_._instance.get_mutable()->securitygameeventbuffer_ = const_cast< ::usx::geofactions::SecurityGameEventBuffer*>(
      ::usx::geofactions::SecurityGameEventBuffer::internal_default_instance());
}
void GameEventBuffer::clear_entitygameeventbuffer() {
  if (entitygameeventbuffer_ != NULL) entitygameeventbuffer_->Clear();
  clear_has_entitygameeventbuffer();
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GameEventBuffer::kTypeFieldNumber;
const int GameEventBuffer::kEntityGameEventBufferFieldNumber;
const int GameEventBuffer::kSecurityGameEventBufferFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GameEventBuffer::GameEventBuffer()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_GameEventBuffer_2eproto::scc_info_GameEventBuffer.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:usx.geofactions.GameEventBuffer)
}
GameEventBuffer::GameEventBuffer(const GameEventBuffer& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_entitygameeventbuffer()) {
    entitygameeventbuffer_ = new ::usx::geofactions::EntityGameEventBuffer(*from.entitygameeventbuffer_);
  } else {
    entitygameeventbuffer_ = NULL;
  }
  if (from.has_securitygameeventbuffer()) {
    securitygameeventbuffer_ = new ::usx::geofactions::SecurityGameEventBuffer(*from.securitygameeventbuffer_);
  } else {
    securitygameeventbuffer_ = NULL;
  }
  type_ = from.type_;
  // @@protoc_insertion_point(copy_constructor:usx.geofactions.GameEventBuffer)
}

void GameEventBuffer::SharedCtor() {
  ::memset(&entitygameeventbuffer_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&type_) -
      reinterpret_cast<char*>(&entitygameeventbuffer_)) + sizeof(type_));
}

GameEventBuffer::~GameEventBuffer() {
  // @@protoc_insertion_point(destructor:usx.geofactions.GameEventBuffer)
  SharedDtor();
}

void GameEventBuffer::SharedDtor() {
  if (this != internal_default_instance()) delete entitygameeventbuffer_;
  if (this != internal_default_instance()) delete securitygameeventbuffer_;
}

void GameEventBuffer::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* GameEventBuffer::descriptor() {
  ::protobuf_GameEventBuffer_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_GameEventBuffer_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GameEventBuffer& GameEventBuffer::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_GameEventBuffer_2eproto::scc_info_GameEventBuffer.base);
  return *internal_default_instance();
}


void GameEventBuffer::Clear() {
// @@protoc_insertion_point(message_clear_start:usx.geofactions.GameEventBuffer)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(entitygameeventbuffer_ != NULL);
      entitygameeventbuffer_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(securitygameeventbuffer_ != NULL);
      securitygameeventbuffer_->Clear();
    }
  }
  type_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool GameEventBuffer::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:usx.geofactions.GameEventBuffer)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .usx.geofactions.GameEventBuffer.GameEventBufferType type = 1 [default = UNKNOWN];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::usx::geofactions::GameEventBuffer_GameEventBufferType_IsValid(value)) {
            set_type(static_cast< ::usx::geofactions::GameEventBuffer_GameEventBufferType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(
                1, static_cast< ::google::protobuf::uint64>(value));
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .usx.geofactions.EntityGameEventBuffer entityGameEventBuffer = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_entitygameeventbuffer()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .usx.geofactions.SecurityGameEventBuffer securityGameEventBuffer = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_securitygameeventbuffer()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:usx.geofactions.GameEventBuffer)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:usx.geofactions.GameEventBuffer)
  return false;
#undef DO_
}

void GameEventBuffer::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:usx.geofactions.GameEventBuffer)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .usx.geofactions.GameEventBuffer.GameEventBufferType type = 1 [default = UNKNOWN];
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->type(), output);
  }

  // optional .usx.geofactions.EntityGameEventBuffer entityGameEventBuffer = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_entitygameeventbuffer(), output);
  }

  // optional .usx.geofactions.SecurityGameEventBuffer securityGameEventBuffer = 3;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->_internal_securitygameeventbuffer(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:usx.geofactions.GameEventBuffer)
}

::google::protobuf::uint8* GameEventBuffer::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:usx.geofactions.GameEventBuffer)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .usx.geofactions.GameEventBuffer.GameEventBufferType type = 1 [default = UNKNOWN];
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->type(), target);
  }

  // optional .usx.geofactions.EntityGameEventBuffer entityGameEventBuffer = 2;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_entitygameeventbuffer(), deterministic, target);
  }

  // optional .usx.geofactions.SecurityGameEventBuffer securityGameEventBuffer = 3;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->_internal_securitygameeventbuffer(), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:usx.geofactions.GameEventBuffer)
  return target;
}

size_t GameEventBuffer::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:usx.geofactions.GameEventBuffer)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required .usx.geofactions.GameEventBuffer.GameEventBufferType type = 1 [default = UNKNOWN];
  if (has_type()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->type());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional .usx.geofactions.EntityGameEventBuffer entityGameEventBuffer = 2;
    if (has_entitygameeventbuffer()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *entitygameeventbuffer_);
    }

    // optional .usx.geofactions.SecurityGameEventBuffer securityGameEventBuffer = 3;
    if (has_securitygameeventbuffer()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *securitygameeventbuffer_);
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GameEventBuffer::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:usx.geofactions.GameEventBuffer)
  GOOGLE_DCHECK_NE(&from, this);
  const GameEventBuffer* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GameEventBuffer>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:usx.geofactions.GameEventBuffer)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:usx.geofactions.GameEventBuffer)
    MergeFrom(*source);
  }
}

void GameEventBuffer::MergeFrom(const GameEventBuffer& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:usx.geofactions.GameEventBuffer)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      mutable_entitygameeventbuffer()->::usx::geofactions::EntityGameEventBuffer::MergeFrom(from.entitygameeventbuffer());
    }
    if (cached_has_bits & 0x00000002u) {
      mutable_securitygameeventbuffer()->::usx::geofactions::SecurityGameEventBuffer::MergeFrom(from.securitygameeventbuffer());
    }
    if (cached_has_bits & 0x00000004u) {
      type_ = from.type_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void GameEventBuffer::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:usx.geofactions.GameEventBuffer)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GameEventBuffer::CopyFrom(const GameEventBuffer& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:usx.geofactions.GameEventBuffer)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GameEventBuffer::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000004) != 0x00000004) return false;
  if (has_entitygameeventbuffer()) {
    if (!this->entitygameeventbuffer_->IsInitialized()) return false;
  }
  if (has_securitygameeventbuffer()) {
    if (!this->securitygameeventbuffer_->IsInitialized()) return false;
  }
  return true;
}

void GameEventBuffer::Swap(GameEventBuffer* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GameEventBuffer::InternalSwap(GameEventBuffer* other) {
  using std::swap;
  swap(entitygameeventbuffer_, other->entitygameeventbuffer_);
  swap(securitygameeventbuffer_, other->securitygameeventbuffer_);
  swap(type_, other->type_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata GameEventBuffer::GetMetadata() const {
  protobuf_GameEventBuffer_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_GameEventBuffer_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace geofactions
}  // namespace usx
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::usx::geofactions::JoinSecurityGameEventBuffer* Arena::CreateMaybeMessage< ::usx::geofactions::JoinSecurityGameEventBuffer >(Arena* arena) {
  return Arena::CreateInternal< ::usx::geofactions::JoinSecurityGameEventBuffer >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::usx::geofactions::LeaveSecurityGameEventBuffer* Arena::CreateMaybeMessage< ::usx::geofactions::LeaveSecurityGameEventBuffer >(Arena* arena) {
  return Arena::CreateInternal< ::usx::geofactions::LeaveSecurityGameEventBuffer >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::usx::geofactions::SecurityGameEventBuffer* Arena::CreateMaybeMessage< ::usx::geofactions::SecurityGameEventBuffer >(Arena* arena) {
  return Arena::CreateInternal< ::usx::geofactions::SecurityGameEventBuffer >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::usx::geofactions::GameEventBuffer* Arena::CreateMaybeMessage< ::usx::geofactions::GameEventBuffer >(Arena* arena) {
  return Arena::CreateInternal< ::usx::geofactions::GameEventBuffer >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
