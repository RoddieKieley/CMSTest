// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: SecurityCommandBuffer.proto

#ifndef PROTOBUF_SecurityCommandBuffer_2eproto__INCLUDED
#define PROTOBUF_SecurityCommandBuffer_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace protobuf_SecurityCommandBuffer_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[3];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
void InitDefaultsJoinSecurityCommandBufferImpl();
void InitDefaultsJoinSecurityCommandBuffer();
void InitDefaultsLeaveSecurityCommandBufferImpl();
void InitDefaultsLeaveSecurityCommandBuffer();
void InitDefaultsSecurityCommandBufferImpl();
void InitDefaultsSecurityCommandBuffer();
inline void InitDefaults() {
  InitDefaultsJoinSecurityCommandBuffer();
  InitDefaultsLeaveSecurityCommandBuffer();
  InitDefaultsSecurityCommandBuffer();
}
}  // namespace protobuf_SecurityCommandBuffer_2eproto
namespace usx {
namespace geofactions {
class JoinSecurityCommandBuffer;
class JoinSecurityCommandBufferDefaultTypeInternal;
extern JoinSecurityCommandBufferDefaultTypeInternal _JoinSecurityCommandBuffer_default_instance_;
class LeaveSecurityCommandBuffer;
class LeaveSecurityCommandBufferDefaultTypeInternal;
extern LeaveSecurityCommandBufferDefaultTypeInternal _LeaveSecurityCommandBuffer_default_instance_;
class SecurityCommandBuffer;
class SecurityCommandBufferDefaultTypeInternal;
extern SecurityCommandBufferDefaultTypeInternal _SecurityCommandBuffer_default_instance_;
}  // namespace geofactions
}  // namespace usx
namespace usx {
namespace geofactions {

enum SecurityCommandBuffer_SecurityCommandBufferType {
  SecurityCommandBuffer_SecurityCommandBufferType_UNKNOWN = 0,
  SecurityCommandBuffer_SecurityCommandBufferType_JOIN = 1,
  SecurityCommandBuffer_SecurityCommandBufferType_LEAVE = 2
};
bool SecurityCommandBuffer_SecurityCommandBufferType_IsValid(int value);
const SecurityCommandBuffer_SecurityCommandBufferType SecurityCommandBuffer_SecurityCommandBufferType_SecurityCommandBufferType_MIN = SecurityCommandBuffer_SecurityCommandBufferType_UNKNOWN;
const SecurityCommandBuffer_SecurityCommandBufferType SecurityCommandBuffer_SecurityCommandBufferType_SecurityCommandBufferType_MAX = SecurityCommandBuffer_SecurityCommandBufferType_LEAVE;
const int SecurityCommandBuffer_SecurityCommandBufferType_SecurityCommandBufferType_ARRAYSIZE = SecurityCommandBuffer_SecurityCommandBufferType_SecurityCommandBufferType_MAX + 1;

const ::google::protobuf::EnumDescriptor* SecurityCommandBuffer_SecurityCommandBufferType_descriptor();
inline const ::std::string& SecurityCommandBuffer_SecurityCommandBufferType_Name(SecurityCommandBuffer_SecurityCommandBufferType value) {
  return ::google::protobuf::internal::NameOfEnum(
    SecurityCommandBuffer_SecurityCommandBufferType_descriptor(), value);
}
inline bool SecurityCommandBuffer_SecurityCommandBufferType_Parse(
    const ::std::string& name, SecurityCommandBuffer_SecurityCommandBufferType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<SecurityCommandBuffer_SecurityCommandBufferType>(
    SecurityCommandBuffer_SecurityCommandBufferType_descriptor(), name, value);
}
// ===================================================================

class JoinSecurityCommandBuffer : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:usx.geofactions.JoinSecurityCommandBuffer) */ {
 public:
  JoinSecurityCommandBuffer();
  virtual ~JoinSecurityCommandBuffer();

  JoinSecurityCommandBuffer(const JoinSecurityCommandBuffer& from);

  inline JoinSecurityCommandBuffer& operator=(const JoinSecurityCommandBuffer& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  JoinSecurityCommandBuffer(JoinSecurityCommandBuffer&& from) noexcept
    : JoinSecurityCommandBuffer() {
    *this = ::std::move(from);
  }

  inline JoinSecurityCommandBuffer& operator=(JoinSecurityCommandBuffer&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const JoinSecurityCommandBuffer& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const JoinSecurityCommandBuffer* internal_default_instance() {
    return reinterpret_cast<const JoinSecurityCommandBuffer*>(
               &_JoinSecurityCommandBuffer_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    0;

  void Swap(JoinSecurityCommandBuffer* other);
  friend void swap(JoinSecurityCommandBuffer& a, JoinSecurityCommandBuffer& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline JoinSecurityCommandBuffer* New() const PROTOBUF_FINAL { return New(NULL); }

  JoinSecurityCommandBuffer* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const JoinSecurityCommandBuffer& from);
  void MergeFrom(const JoinSecurityCommandBuffer& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(JoinSecurityCommandBuffer* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:usx.geofactions.JoinSecurityCommandBuffer)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  friend struct ::protobuf_SecurityCommandBuffer_2eproto::TableStruct;
  friend void ::protobuf_SecurityCommandBuffer_2eproto::InitDefaultsJoinSecurityCommandBufferImpl();
};
// -------------------------------------------------------------------

class LeaveSecurityCommandBuffer : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:usx.geofactions.LeaveSecurityCommandBuffer) */ {
 public:
  LeaveSecurityCommandBuffer();
  virtual ~LeaveSecurityCommandBuffer();

  LeaveSecurityCommandBuffer(const LeaveSecurityCommandBuffer& from);

  inline LeaveSecurityCommandBuffer& operator=(const LeaveSecurityCommandBuffer& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  LeaveSecurityCommandBuffer(LeaveSecurityCommandBuffer&& from) noexcept
    : LeaveSecurityCommandBuffer() {
    *this = ::std::move(from);
  }

  inline LeaveSecurityCommandBuffer& operator=(LeaveSecurityCommandBuffer&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const LeaveSecurityCommandBuffer& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const LeaveSecurityCommandBuffer* internal_default_instance() {
    return reinterpret_cast<const LeaveSecurityCommandBuffer*>(
               &_LeaveSecurityCommandBuffer_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    1;

  void Swap(LeaveSecurityCommandBuffer* other);
  friend void swap(LeaveSecurityCommandBuffer& a, LeaveSecurityCommandBuffer& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline LeaveSecurityCommandBuffer* New() const PROTOBUF_FINAL { return New(NULL); }

  LeaveSecurityCommandBuffer* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const LeaveSecurityCommandBuffer& from);
  void MergeFrom(const LeaveSecurityCommandBuffer& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(LeaveSecurityCommandBuffer* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string UUID = 1;
  bool has_uuid() const;
  void clear_uuid();
  static const int kUUIDFieldNumber = 1;
  const ::std::string& uuid() const;
  void set_uuid(const ::std::string& value);
  #if LANG_CXX11
  void set_uuid(::std::string&& value);
  #endif
  void set_uuid(const char* value);
  void set_uuid(const char* value, size_t size);
  ::std::string* mutable_uuid();
  ::std::string* release_uuid();
  void set_allocated_uuid(::std::string* uuid);

  // @@protoc_insertion_point(class_scope:usx.geofactions.LeaveSecurityCommandBuffer)
 private:
  void set_has_uuid();
  void clear_has_uuid();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr uuid_;
  friend struct ::protobuf_SecurityCommandBuffer_2eproto::TableStruct;
  friend void ::protobuf_SecurityCommandBuffer_2eproto::InitDefaultsLeaveSecurityCommandBufferImpl();
};
// -------------------------------------------------------------------

class SecurityCommandBuffer : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:usx.geofactions.SecurityCommandBuffer) */ {
 public:
  SecurityCommandBuffer();
  virtual ~SecurityCommandBuffer();

  SecurityCommandBuffer(const SecurityCommandBuffer& from);

  inline SecurityCommandBuffer& operator=(const SecurityCommandBuffer& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  SecurityCommandBuffer(SecurityCommandBuffer&& from) noexcept
    : SecurityCommandBuffer() {
    *this = ::std::move(from);
  }

  inline SecurityCommandBuffer& operator=(SecurityCommandBuffer&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SecurityCommandBuffer& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const SecurityCommandBuffer* internal_default_instance() {
    return reinterpret_cast<const SecurityCommandBuffer*>(
               &_SecurityCommandBuffer_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    2;

  void Swap(SecurityCommandBuffer* other);
  friend void swap(SecurityCommandBuffer& a, SecurityCommandBuffer& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline SecurityCommandBuffer* New() const PROTOBUF_FINAL { return New(NULL); }

  SecurityCommandBuffer* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SecurityCommandBuffer& from);
  void MergeFrom(const SecurityCommandBuffer& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SecurityCommandBuffer* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef SecurityCommandBuffer_SecurityCommandBufferType SecurityCommandBufferType;
  static const SecurityCommandBufferType UNKNOWN =
    SecurityCommandBuffer_SecurityCommandBufferType_UNKNOWN;
  static const SecurityCommandBufferType JOIN =
    SecurityCommandBuffer_SecurityCommandBufferType_JOIN;
  static const SecurityCommandBufferType LEAVE =
    SecurityCommandBuffer_SecurityCommandBufferType_LEAVE;
  static inline bool SecurityCommandBufferType_IsValid(int value) {
    return SecurityCommandBuffer_SecurityCommandBufferType_IsValid(value);
  }
  static const SecurityCommandBufferType SecurityCommandBufferType_MIN =
    SecurityCommandBuffer_SecurityCommandBufferType_SecurityCommandBufferType_MIN;
  static const SecurityCommandBufferType SecurityCommandBufferType_MAX =
    SecurityCommandBuffer_SecurityCommandBufferType_SecurityCommandBufferType_MAX;
  static const int SecurityCommandBufferType_ARRAYSIZE =
    SecurityCommandBuffer_SecurityCommandBufferType_SecurityCommandBufferType_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  SecurityCommandBufferType_descriptor() {
    return SecurityCommandBuffer_SecurityCommandBufferType_descriptor();
  }
  static inline const ::std::string& SecurityCommandBufferType_Name(SecurityCommandBufferType value) {
    return SecurityCommandBuffer_SecurityCommandBufferType_Name(value);
  }
  static inline bool SecurityCommandBufferType_Parse(const ::std::string& name,
      SecurityCommandBufferType* value) {
    return SecurityCommandBuffer_SecurityCommandBufferType_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional string UUID = 2;
  bool has_uuid() const;
  void clear_uuid();
  static const int kUUIDFieldNumber = 2;
  const ::std::string& uuid() const;
  void set_uuid(const ::std::string& value);
  #if LANG_CXX11
  void set_uuid(::std::string&& value);
  #endif
  void set_uuid(const char* value);
  void set_uuid(const char* value, size_t size);
  ::std::string* mutable_uuid();
  ::std::string* release_uuid();
  void set_allocated_uuid(::std::string* uuid);

  // optional .usx.geofactions.JoinSecurityCommandBuffer joinSecurityCommandBuffer = 3;
  bool has_joinsecuritycommandbuffer() const;
  void clear_joinsecuritycommandbuffer();
  static const int kJoinSecurityCommandBufferFieldNumber = 3;
  const ::usx::geofactions::JoinSecurityCommandBuffer& joinsecuritycommandbuffer() const;
  ::usx::geofactions::JoinSecurityCommandBuffer* release_joinsecuritycommandbuffer();
  ::usx::geofactions::JoinSecurityCommandBuffer* mutable_joinsecuritycommandbuffer();
  void set_allocated_joinsecuritycommandbuffer(::usx::geofactions::JoinSecurityCommandBuffer* joinsecuritycommandbuffer);

  // optional .usx.geofactions.LeaveSecurityCommandBuffer leaveSecurityCommandBuffer = 4;
  bool has_leavesecuritycommandbuffer() const;
  void clear_leavesecuritycommandbuffer();
  static const int kLeaveSecurityCommandBufferFieldNumber = 4;
  const ::usx::geofactions::LeaveSecurityCommandBuffer& leavesecuritycommandbuffer() const;
  ::usx::geofactions::LeaveSecurityCommandBuffer* release_leavesecuritycommandbuffer();
  ::usx::geofactions::LeaveSecurityCommandBuffer* mutable_leavesecuritycommandbuffer();
  void set_allocated_leavesecuritycommandbuffer(::usx::geofactions::LeaveSecurityCommandBuffer* leavesecuritycommandbuffer);

  // required .usx.geofactions.SecurityCommandBuffer.SecurityCommandBufferType type = 1 [default = UNKNOWN];
  bool has_type() const;
  void clear_type();
  static const int kTypeFieldNumber = 1;
  ::usx::geofactions::SecurityCommandBuffer_SecurityCommandBufferType type() const;
  void set_type(::usx::geofactions::SecurityCommandBuffer_SecurityCommandBufferType value);

  // @@protoc_insertion_point(class_scope:usx.geofactions.SecurityCommandBuffer)
 private:
  void set_has_type();
  void clear_has_type();
  void set_has_uuid();
  void clear_has_uuid();
  void set_has_joinsecuritycommandbuffer();
  void clear_has_joinsecuritycommandbuffer();
  void set_has_leavesecuritycommandbuffer();
  void clear_has_leavesecuritycommandbuffer();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr uuid_;
  ::usx::geofactions::JoinSecurityCommandBuffer* joinsecuritycommandbuffer_;
  ::usx::geofactions::LeaveSecurityCommandBuffer* leavesecuritycommandbuffer_;
  int type_;
  friend struct ::protobuf_SecurityCommandBuffer_2eproto::TableStruct;
  friend void ::protobuf_SecurityCommandBuffer_2eproto::InitDefaultsSecurityCommandBufferImpl();
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// JoinSecurityCommandBuffer

// -------------------------------------------------------------------

// LeaveSecurityCommandBuffer

// required string UUID = 1;
inline bool LeaveSecurityCommandBuffer::has_uuid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void LeaveSecurityCommandBuffer::set_has_uuid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void LeaveSecurityCommandBuffer::clear_has_uuid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void LeaveSecurityCommandBuffer::clear_uuid() {
  uuid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_uuid();
}
inline const ::std::string& LeaveSecurityCommandBuffer::uuid() const {
  // @@protoc_insertion_point(field_get:usx.geofactions.LeaveSecurityCommandBuffer.UUID)
  return uuid_.GetNoArena();
}
inline void LeaveSecurityCommandBuffer::set_uuid(const ::std::string& value) {
  set_has_uuid();
  uuid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:usx.geofactions.LeaveSecurityCommandBuffer.UUID)
}
#if LANG_CXX11
inline void LeaveSecurityCommandBuffer::set_uuid(::std::string&& value) {
  set_has_uuid();
  uuid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:usx.geofactions.LeaveSecurityCommandBuffer.UUID)
}
#endif
inline void LeaveSecurityCommandBuffer::set_uuid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_uuid();
  uuid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:usx.geofactions.LeaveSecurityCommandBuffer.UUID)
}
inline void LeaveSecurityCommandBuffer::set_uuid(const char* value, size_t size) {
  set_has_uuid();
  uuid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:usx.geofactions.LeaveSecurityCommandBuffer.UUID)
}
inline ::std::string* LeaveSecurityCommandBuffer::mutable_uuid() {
  set_has_uuid();
  // @@protoc_insertion_point(field_mutable:usx.geofactions.LeaveSecurityCommandBuffer.UUID)
  return uuid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* LeaveSecurityCommandBuffer::release_uuid() {
  // @@protoc_insertion_point(field_release:usx.geofactions.LeaveSecurityCommandBuffer.UUID)
  clear_has_uuid();
  return uuid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void LeaveSecurityCommandBuffer::set_allocated_uuid(::std::string* uuid) {
  if (uuid != NULL) {
    set_has_uuid();
  } else {
    clear_has_uuid();
  }
  uuid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), uuid);
  // @@protoc_insertion_point(field_set_allocated:usx.geofactions.LeaveSecurityCommandBuffer.UUID)
}

// -------------------------------------------------------------------

// SecurityCommandBuffer

// required .usx.geofactions.SecurityCommandBuffer.SecurityCommandBufferType type = 1 [default = UNKNOWN];
inline bool SecurityCommandBuffer::has_type() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void SecurityCommandBuffer::set_has_type() {
  _has_bits_[0] |= 0x00000008u;
}
inline void SecurityCommandBuffer::clear_has_type() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void SecurityCommandBuffer::clear_type() {
  type_ = 0;
  clear_has_type();
}
inline ::usx::geofactions::SecurityCommandBuffer_SecurityCommandBufferType SecurityCommandBuffer::type() const {
  // @@protoc_insertion_point(field_get:usx.geofactions.SecurityCommandBuffer.type)
  return static_cast< ::usx::geofactions::SecurityCommandBuffer_SecurityCommandBufferType >(type_);
}
inline void SecurityCommandBuffer::set_type(::usx::geofactions::SecurityCommandBuffer_SecurityCommandBufferType value) {
  assert(::usx::geofactions::SecurityCommandBuffer_SecurityCommandBufferType_IsValid(value));
  set_has_type();
  type_ = value;
  // @@protoc_insertion_point(field_set:usx.geofactions.SecurityCommandBuffer.type)
}

// optional string UUID = 2;
inline bool SecurityCommandBuffer::has_uuid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SecurityCommandBuffer::set_has_uuid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SecurityCommandBuffer::clear_has_uuid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SecurityCommandBuffer::clear_uuid() {
  uuid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_uuid();
}
inline const ::std::string& SecurityCommandBuffer::uuid() const {
  // @@protoc_insertion_point(field_get:usx.geofactions.SecurityCommandBuffer.UUID)
  return uuid_.GetNoArena();
}
inline void SecurityCommandBuffer::set_uuid(const ::std::string& value) {
  set_has_uuid();
  uuid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:usx.geofactions.SecurityCommandBuffer.UUID)
}
#if LANG_CXX11
inline void SecurityCommandBuffer::set_uuid(::std::string&& value) {
  set_has_uuid();
  uuid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:usx.geofactions.SecurityCommandBuffer.UUID)
}
#endif
inline void SecurityCommandBuffer::set_uuid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_uuid();
  uuid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:usx.geofactions.SecurityCommandBuffer.UUID)
}
inline void SecurityCommandBuffer::set_uuid(const char* value, size_t size) {
  set_has_uuid();
  uuid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:usx.geofactions.SecurityCommandBuffer.UUID)
}
inline ::std::string* SecurityCommandBuffer::mutable_uuid() {
  set_has_uuid();
  // @@protoc_insertion_point(field_mutable:usx.geofactions.SecurityCommandBuffer.UUID)
  return uuid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SecurityCommandBuffer::release_uuid() {
  // @@protoc_insertion_point(field_release:usx.geofactions.SecurityCommandBuffer.UUID)
  clear_has_uuid();
  return uuid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SecurityCommandBuffer::set_allocated_uuid(::std::string* uuid) {
  if (uuid != NULL) {
    set_has_uuid();
  } else {
    clear_has_uuid();
  }
  uuid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), uuid);
  // @@protoc_insertion_point(field_set_allocated:usx.geofactions.SecurityCommandBuffer.UUID)
}

// optional .usx.geofactions.JoinSecurityCommandBuffer joinSecurityCommandBuffer = 3;
inline bool SecurityCommandBuffer::has_joinsecuritycommandbuffer() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SecurityCommandBuffer::set_has_joinsecuritycommandbuffer() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SecurityCommandBuffer::clear_has_joinsecuritycommandbuffer() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SecurityCommandBuffer::clear_joinsecuritycommandbuffer() {
  if (joinsecuritycommandbuffer_ != NULL) joinsecuritycommandbuffer_->Clear();
  clear_has_joinsecuritycommandbuffer();
}
inline const ::usx::geofactions::JoinSecurityCommandBuffer& SecurityCommandBuffer::joinsecuritycommandbuffer() const {
  const ::usx::geofactions::JoinSecurityCommandBuffer* p = joinsecuritycommandbuffer_;
  // @@protoc_insertion_point(field_get:usx.geofactions.SecurityCommandBuffer.joinSecurityCommandBuffer)
  return p != NULL ? *p : *reinterpret_cast<const ::usx::geofactions::JoinSecurityCommandBuffer*>(
      &::usx::geofactions::_JoinSecurityCommandBuffer_default_instance_);
}
inline ::usx::geofactions::JoinSecurityCommandBuffer* SecurityCommandBuffer::release_joinsecuritycommandbuffer() {
  // @@protoc_insertion_point(field_release:usx.geofactions.SecurityCommandBuffer.joinSecurityCommandBuffer)
  clear_has_joinsecuritycommandbuffer();
  ::usx::geofactions::JoinSecurityCommandBuffer* temp = joinsecuritycommandbuffer_;
  joinsecuritycommandbuffer_ = NULL;
  return temp;
}
inline ::usx::geofactions::JoinSecurityCommandBuffer* SecurityCommandBuffer::mutable_joinsecuritycommandbuffer() {
  set_has_joinsecuritycommandbuffer();
  if (joinsecuritycommandbuffer_ == NULL) {
    joinsecuritycommandbuffer_ = new ::usx::geofactions::JoinSecurityCommandBuffer;
  }
  // @@protoc_insertion_point(field_mutable:usx.geofactions.SecurityCommandBuffer.joinSecurityCommandBuffer)
  return joinsecuritycommandbuffer_;
}
inline void SecurityCommandBuffer::set_allocated_joinsecuritycommandbuffer(::usx::geofactions::JoinSecurityCommandBuffer* joinsecuritycommandbuffer) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete joinsecuritycommandbuffer_;
  }
  if (joinsecuritycommandbuffer) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      joinsecuritycommandbuffer = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, joinsecuritycommandbuffer, submessage_arena);
    }
    set_has_joinsecuritycommandbuffer();
  } else {
    clear_has_joinsecuritycommandbuffer();
  }
  joinsecuritycommandbuffer_ = joinsecuritycommandbuffer;
  // @@protoc_insertion_point(field_set_allocated:usx.geofactions.SecurityCommandBuffer.joinSecurityCommandBuffer)
}

// optional .usx.geofactions.LeaveSecurityCommandBuffer leaveSecurityCommandBuffer = 4;
inline bool SecurityCommandBuffer::has_leavesecuritycommandbuffer() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void SecurityCommandBuffer::set_has_leavesecuritycommandbuffer() {
  _has_bits_[0] |= 0x00000004u;
}
inline void SecurityCommandBuffer::clear_has_leavesecuritycommandbuffer() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void SecurityCommandBuffer::clear_leavesecuritycommandbuffer() {
  if (leavesecuritycommandbuffer_ != NULL) leavesecuritycommandbuffer_->Clear();
  clear_has_leavesecuritycommandbuffer();
}
inline const ::usx::geofactions::LeaveSecurityCommandBuffer& SecurityCommandBuffer::leavesecuritycommandbuffer() const {
  const ::usx::geofactions::LeaveSecurityCommandBuffer* p = leavesecuritycommandbuffer_;
  // @@protoc_insertion_point(field_get:usx.geofactions.SecurityCommandBuffer.leaveSecurityCommandBuffer)
  return p != NULL ? *p : *reinterpret_cast<const ::usx::geofactions::LeaveSecurityCommandBuffer*>(
      &::usx::geofactions::_LeaveSecurityCommandBuffer_default_instance_);
}
inline ::usx::geofactions::LeaveSecurityCommandBuffer* SecurityCommandBuffer::release_leavesecuritycommandbuffer() {
  // @@protoc_insertion_point(field_release:usx.geofactions.SecurityCommandBuffer.leaveSecurityCommandBuffer)
  clear_has_leavesecuritycommandbuffer();
  ::usx::geofactions::LeaveSecurityCommandBuffer* temp = leavesecuritycommandbuffer_;
  leavesecuritycommandbuffer_ = NULL;
  return temp;
}
inline ::usx::geofactions::LeaveSecurityCommandBuffer* SecurityCommandBuffer::mutable_leavesecuritycommandbuffer() {
  set_has_leavesecuritycommandbuffer();
  if (leavesecuritycommandbuffer_ == NULL) {
    leavesecuritycommandbuffer_ = new ::usx::geofactions::LeaveSecurityCommandBuffer;
  }
  // @@protoc_insertion_point(field_mutable:usx.geofactions.SecurityCommandBuffer.leaveSecurityCommandBuffer)
  return leavesecuritycommandbuffer_;
}
inline void SecurityCommandBuffer::set_allocated_leavesecuritycommandbuffer(::usx::geofactions::LeaveSecurityCommandBuffer* leavesecuritycommandbuffer) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete leavesecuritycommandbuffer_;
  }
  if (leavesecuritycommandbuffer) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      leavesecuritycommandbuffer = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, leavesecuritycommandbuffer, submessage_arena);
    }
    set_has_leavesecuritycommandbuffer();
  } else {
    clear_has_leavesecuritycommandbuffer();
  }
  leavesecuritycommandbuffer_ = leavesecuritycommandbuffer;
  // @@protoc_insertion_point(field_set_allocated:usx.geofactions.SecurityCommandBuffer.leaveSecurityCommandBuffer)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace geofactions
}  // namespace usx

namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::usx::geofactions::SecurityCommandBuffer_SecurityCommandBufferType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::usx::geofactions::SecurityCommandBuffer_SecurityCommandBufferType>() {
  return ::usx::geofactions::SecurityCommandBuffer_SecurityCommandBufferType_descriptor();
}

}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_SecurityCommandBuffer_2eproto__INCLUDED
